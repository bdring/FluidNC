These functions still need to be implemented for X86 unit tests to run:

Note: I2S can be stubs. vTask can run through thread probably. xQueue should be a queue. nvs is already implemented, but needs forwarders. UART needs work.
TODO: Two things need to be captured: (1) uart/pin/etc and (2) timings. All timings are 0, *unless* something sleeps, which updates the 'current time'. So I don't want to emulate as-is, but rather make things super-fast. The only notable exception is spinlocks... we should device something to handle that.

"class SPIClass SPI" (?SPI@@3VSPIClass@@A)
"class fs::SDFS SD" (?SD@@3VSDFS@fs@@A)
"class fs::SPIFFSFS SPIFFS" (?SPIFFS@@3VSPIFFSFS@fs@@A)
"enum i2s_out_pulser_status_t __cdecl i2s_out_get_pulser_status(void)" (?i2s_out_get_pulser_status@@YA?AW4i2s_out_pulser_status_t@@XZ)
"int __cdecl i2s_out_init(void)" (?i2s_out_init@@YAHXZ)
"int __cdecl i2s_out_reset(void)" (?i2s_out_reset@@YAHXZ)
"int __cdecl i2s_out_set_passthrough(void)" (?i2s_out_set_passthrough@@YAHXZ)
"int __cdecl i2s_out_set_pulse_callback(void (__cdecl*)(void))" (?i2s_out_set_pulse_callback@@YAHP6AXXZ@Z)
"int __cdecl i2s_out_set_pulse_period(unsigned int)" (?i2s_out_set_pulse_period@@YAHI@Z)
"int __cdecl i2s_out_set_stepping(void)" (?i2s_out_set_stepping@@YAHXZ)
"int __cdecl rmt_config(struct rmt_config_t const *)" (?rmt_config@@YAHPBUrmt_config_t@@@Z)
"int __cdecl rmt_fill_tx_items(enum rmt_channel_t,struct rmt_item32_s const *,unsigned short,unsigned short)" (?rmt_fill_tx_items@@YAHW4rmt_channel_t@@PBUrmt_item32_s@@GG@Z)
"int __cdecl rmt_set_source_clk(enum rmt_channel_t,enum rmt_source_clk_t)" (?rmt_set_source_clk@@YAHW4rmt_channel_t@@W4rmt_source_clk_t@@@Z)
"protected: int32_t __thiscall Stream::timedPeek(void)" (?timedPeek@Stream@@IAEHXZ)
"protected: int32_t __thiscall Stream::timedRead(void)" (?timedRead@Stream@@IAEHXZ)
"public: bool __thiscall Stream::findUntil(char const *,unsigned int,char const *,unsigned int)" (?findUntil@Stream@@QAE_NPBDI0I@Z)
"public: bool __thiscall fs::SDFS::begin(unsigned char,class SPIClass &,unsigned int,char const *,unsigned char,bool)" (?begin@SDFS@fs@@QAE_NEAAVSPIClass@@IPBDE_N@Z)
"public: bool __thiscall fs::SPIFFSFS::begin(bool,char const *,unsigned char,char const *)" (?begin@SPIFFSFS@fs@@QAE_N_NPBDE1@Z)
"public: bool __thiscall fs::SPIFFSFS::format(void)" (?format@SPIFFSFS@fs@@QAE_NXZ)
"public: unsigned __int64 __thiscall fs::SDFS::cardSize(void)" (?cardSize@SDFS@fs@@QAE_KXZ)
"public: unsigned __int64 __thiscall fs::SDFS::totalBytes(void)" (?totalBytes@SDFS@fs@@QAE_KXZ)
"public: unsigned __int64 __thiscall fs::SDFS::usedBytes(void)" (?usedBytes@SDFS@fs@@QAE_KXZ)
"public: unsigned int32_t __thiscall fs::SPIFFSFS::totalBytes(void)" (?totalBytes@SPIFFSFS@fs@@QAEIXZ)
"public: unsigned int32_t __thiscall fs::SPIFFSFS::usedBytes(void)" (?usedBytes@SPIFFSFS@fs@@QAEIXZ)
"public: void __thiscall fs::SDFS::end(void)" (?end@SDFS@fs@@QAEXXZ)
"struct hw_timer_s * __cdecl timerBegin(unsigned char,unsigned short,bool)" (?timerBegin@@YAPAUhw_timer_s@@EG_N@Z)
"struct rmt_dev_s volatile RMT" (?RMT@@3Urmt_dev_s@@C)
"unsigned int32_t __cdecl i2s_out_push_sample(unsigned int)" (?i2s_out_push_sample@@YAII@Z)
"void __cdecl i2s_out_delay(void)" (?i2s_out_delay@@YAXXZ)
"void __cdecl timerAlarmDisable(struct hw_timer_s *)" (?timerAlarmDisable@@YAXPAUhw_timer_s@@@Z)
"void __cdecl timerAlarmEnable(struct hw_timer_s *)" (?timerAlarmEnable@@YAXPAUhw_timer_s@@@Z)
"void __cdecl timerAlarmWrite(struct hw_timer_s *,unsigned __int64,bool)" (?timerAlarmWrite@@YAXPAUhw_timer_s@@_K_N@Z)
"void __cdecl timerAttachInterrupt(struct hw_timer_s *,void (__cdecl*)(void),bool)" (?timerAttachInterrupt@@YAXPAUhw_timer_s@@P6AXXZ_N@Z)
"void __cdecl timerWrite(struct hw_timer_s *,unsigned __int64)" (?timerWrite@@YAXPAUhw_timer_s@@_K@Z)
